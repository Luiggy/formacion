package com.cursoliferay.liferay.portlets.alineaciones.service.base;

import com.cursoliferay.liferay.portlets.alineaciones.model.Partido;
import com.cursoliferay.liferay.portlets.alineaciones.service.PartidoService;
import com.cursoliferay.liferay.portlets.alineaciones.service.persistence.JugadorPersistence;
import com.cursoliferay.liferay.portlets.alineaciones.service.persistence.PartidoPersistence;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.bean.IdentifiableBean;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.service.BaseServiceImpl;
import com.liferay.portal.service.persistence.UserPersistence;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the partido remote service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link com.cursoliferay.liferay.portlets.alineaciones.service.impl.PartidoServiceImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see com.cursoliferay.liferay.portlets.alineaciones.service.impl.PartidoServiceImpl
 * @see com.cursoliferay.liferay.portlets.alineaciones.service.PartidoServiceUtil
 * @generated
 */
public abstract class PartidoServiceBaseImpl extends BaseServiceImpl
    implements PartidoService, IdentifiableBean {
    @BeanReference(type = com.cursoliferay.liferay.portlets.alineaciones.service.JugadorLocalService.class)
    protected com.cursoliferay.liferay.portlets.alineaciones.service.JugadorLocalService jugadorLocalService;
    @BeanReference(type = com.cursoliferay.liferay.portlets.alineaciones.service.JugadorService.class)
    protected com.cursoliferay.liferay.portlets.alineaciones.service.JugadorService jugadorService;
    @BeanReference(type = JugadorPersistence.class)
    protected JugadorPersistence jugadorPersistence;
    @BeanReference(type = com.cursoliferay.liferay.portlets.alineaciones.service.PartidoLocalService.class)
    protected com.cursoliferay.liferay.portlets.alineaciones.service.PartidoLocalService partidoLocalService;
    @BeanReference(type = com.cursoliferay.liferay.portlets.alineaciones.service.PartidoService.class)
    protected com.cursoliferay.liferay.portlets.alineaciones.service.PartidoService partidoService;
    @BeanReference(type = PartidoPersistence.class)
    protected PartidoPersistence partidoPersistence;
    @BeanReference(type = com.liferay.counter.service.CounterLocalService.class)
    protected com.liferay.counter.service.CounterLocalService counterLocalService;
    @BeanReference(type = com.liferay.portal.service.ResourceLocalService.class)
    protected com.liferay.portal.service.ResourceLocalService resourceLocalService;
    @BeanReference(type = com.liferay.portal.service.UserLocalService.class)
    protected com.liferay.portal.service.UserLocalService userLocalService;
    @BeanReference(type = com.liferay.portal.service.UserService.class)
    protected com.liferay.portal.service.UserService userService;
    @BeanReference(type = UserPersistence.class)
    protected UserPersistence userPersistence;
    private String _beanIdentifier;
    private ClassLoader _classLoader;
    private PartidoServiceClpInvoker _clpInvoker = new PartidoServiceClpInvoker();

    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. Always use {@link com.cursoliferay.liferay.portlets.alineaciones.service.PartidoServiceUtil} to access the partido remote service.
     */

    /**
     * Returns the jugador local service.
     *
     * @return the jugador local service
     */
    public com.cursoliferay.liferay.portlets.alineaciones.service.JugadorLocalService getJugadorLocalService() {
        return jugadorLocalService;
    }

    /**
     * Sets the jugador local service.
     *
     * @param jugadorLocalService the jugador local service
     */
    public void setJugadorLocalService(
        com.cursoliferay.liferay.portlets.alineaciones.service.JugadorLocalService jugadorLocalService) {
        this.jugadorLocalService = jugadorLocalService;
    }

    /**
     * Returns the jugador remote service.
     *
     * @return the jugador remote service
     */
    public com.cursoliferay.liferay.portlets.alineaciones.service.JugadorService getJugadorService() {
        return jugadorService;
    }

    /**
     * Sets the jugador remote service.
     *
     * @param jugadorService the jugador remote service
     */
    public void setJugadorService(
        com.cursoliferay.liferay.portlets.alineaciones.service.JugadorService jugadorService) {
        this.jugadorService = jugadorService;
    }

    /**
     * Returns the jugador persistence.
     *
     * @return the jugador persistence
     */
    public JugadorPersistence getJugadorPersistence() {
        return jugadorPersistence;
    }

    /**
     * Sets the jugador persistence.
     *
     * @param jugadorPersistence the jugador persistence
     */
    public void setJugadorPersistence(JugadorPersistence jugadorPersistence) {
        this.jugadorPersistence = jugadorPersistence;
    }

    /**
     * Returns the partido local service.
     *
     * @return the partido local service
     */
    public com.cursoliferay.liferay.portlets.alineaciones.service.PartidoLocalService getPartidoLocalService() {
        return partidoLocalService;
    }

    /**
     * Sets the partido local service.
     *
     * @param partidoLocalService the partido local service
     */
    public void setPartidoLocalService(
        com.cursoliferay.liferay.portlets.alineaciones.service.PartidoLocalService partidoLocalService) {
        this.partidoLocalService = partidoLocalService;
    }

    /**
     * Returns the partido remote service.
     *
     * @return the partido remote service
     */
    public com.cursoliferay.liferay.portlets.alineaciones.service.PartidoService getPartidoService() {
        return partidoService;
    }

    /**
     * Sets the partido remote service.
     *
     * @param partidoService the partido remote service
     */
    public void setPartidoService(
        com.cursoliferay.liferay.portlets.alineaciones.service.PartidoService partidoService) {
        this.partidoService = partidoService;
    }

    /**
     * Returns the partido persistence.
     *
     * @return the partido persistence
     */
    public PartidoPersistence getPartidoPersistence() {
        return partidoPersistence;
    }

    /**
     * Sets the partido persistence.
     *
     * @param partidoPersistence the partido persistence
     */
    public void setPartidoPersistence(PartidoPersistence partidoPersistence) {
        this.partidoPersistence = partidoPersistence;
    }

    /**
     * Returns the counter local service.
     *
     * @return the counter local service
     */
    public com.liferay.counter.service.CounterLocalService getCounterLocalService() {
        return counterLocalService;
    }

    /**
     * Sets the counter local service.
     *
     * @param counterLocalService the counter local service
     */
    public void setCounterLocalService(
        com.liferay.counter.service.CounterLocalService counterLocalService) {
        this.counterLocalService = counterLocalService;
    }

    /**
     * Returns the resource local service.
     *
     * @return the resource local service
     */
    public com.liferay.portal.service.ResourceLocalService getResourceLocalService() {
        return resourceLocalService;
    }

    /**
     * Sets the resource local service.
     *
     * @param resourceLocalService the resource local service
     */
    public void setResourceLocalService(
        com.liferay.portal.service.ResourceLocalService resourceLocalService) {
        this.resourceLocalService = resourceLocalService;
    }

    /**
     * Returns the user local service.
     *
     * @return the user local service
     */
    public com.liferay.portal.service.UserLocalService getUserLocalService() {
        return userLocalService;
    }

    /**
     * Sets the user local service.
     *
     * @param userLocalService the user local service
     */
    public void setUserLocalService(
        com.liferay.portal.service.UserLocalService userLocalService) {
        this.userLocalService = userLocalService;
    }

    /**
     * Returns the user remote service.
     *
     * @return the user remote service
     */
    public com.liferay.portal.service.UserService getUserService() {
        return userService;
    }

    /**
     * Sets the user remote service.
     *
     * @param userService the user remote service
     */
    public void setUserService(
        com.liferay.portal.service.UserService userService) {
        this.userService = userService;
    }

    /**
     * Returns the user persistence.
     *
     * @return the user persistence
     */
    public UserPersistence getUserPersistence() {
        return userPersistence;
    }

    /**
     * Sets the user persistence.
     *
     * @param userPersistence the user persistence
     */
    public void setUserPersistence(UserPersistence userPersistence) {
        this.userPersistence = userPersistence;
    }

    public void afterPropertiesSet() {
        Class<?> clazz = getClass();

        _classLoader = clazz.getClassLoader();
    }

    public void destroy() {
    }

    /**
     * Returns the Spring bean ID for this bean.
     *
     * @return the Spring bean ID for this bean
     */
    @Override
    public String getBeanIdentifier() {
        return _beanIdentifier;
    }

    /**
     * Sets the Spring bean ID for this bean.
     *
     * @param beanIdentifier the Spring bean ID for this bean
     */
    @Override
    public void setBeanIdentifier(String beanIdentifier) {
        _beanIdentifier = beanIdentifier;
    }

    @Override
    public Object invokeMethod(String name, String[] parameterTypes,
        Object[] arguments) throws Throwable {
        Thread currentThread = Thread.currentThread();

        ClassLoader contextClassLoader = currentThread.getContextClassLoader();

        if (contextClassLoader != _classLoader) {
            currentThread.setContextClassLoader(_classLoader);
        }

        try {
            return _clpInvoker.invokeMethod(name, parameterTypes, arguments);
        } finally {
            if (contextClassLoader != _classLoader) {
                currentThread.setContextClassLoader(contextClassLoader);
            }
        }
    }

    protected Class<?> getModelClass() {
        return Partido.class;
    }

    protected String getModelClassName() {
        return Partido.class.getName();
    }

    /**
     * Performs an SQL query.
     *
     * @param sql the sql query
     */
    protected void runSQL(String sql) throws SystemException {
        try {
            DataSource dataSource = partidoPersistence.getDataSource();

            SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
                    sql, new int[0]);

            sqlUpdate.update();
        } catch (Exception e) {
            throw new SystemException(e);
        }
    }
}
